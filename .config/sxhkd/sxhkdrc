#
# wm independent hotkeys
#

# terminal emulator [Rick: added shift+RETURN; muscle memory.]
super + {_,shift + }Return
	st -f terminus:size=12 -g 156x56 -e mksh -l
#	/usr/home/rick/builds/xst/xst -A 220 -f terminus:size=12 -g 156x56 -e mksh -l
#	urxvt -bg black -fg grey80 -geometry 156x52 -vb
#	st -f terminus:size=12

# program launcher [Rick: added p; muscle memory.]
super + {@space, p}
	dmenu_run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

super + Scroll_Lock
	slock

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill [Rick: changed from (default) w to c.]
super + {_,shift + }c
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
#
# [Rick: I have no idea what this is supposed to do so I'm turning it
# off.]
##super + y
##	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
#
# [Rick: I believe this was potentially swapping with a window from
# another destop, which was confusing and not what I expected/wanted;
# so I'm turning it off.]
##super + g
##	bspc node -s biggest

#
# state/flags
#

# set the window state
# [Rick: default was: super + {t,shift + t,s,f}]
super + {t,shift + t,f,shift + f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{Left,Down,Up,Right}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#super + {p,b,comma,period}  # [Rick: using p for dmenu_run.]
super + shift + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
# [Rick: changed from c to q; q is next to TAB.]
super + {_,shift + }q
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last (local )node/desktop
super + {Tab,grave}
	bspc {node,desktop} -f last{.local,_}

# focus the older or newer node in the focus history
#
# [Rick: I have no idea what this is supposed to do so I'm turning it
# off.  Besides, I'm using i now for something else: move floating
# window up.]
##super + {o,i}
##	bspc wm -h off; \
##	bspc node {older,newer} -f; \
##	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {Left,Down,Up,Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {Left,Down,Up,Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {j,k,i,l}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Increase/decrease gaps
super + shift + bracket{left,right}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 5 )) 

# Rotate all windows [counter-]clockwise by 90 degrees.
super + {_,shift + }r
	bspc node @/ --rotate {90,-90}

# Flip desktop: what is on the right/top moves to the left/bottom and
# vice versa.
super + alt + {_,shift + }r
	bspc node @/ --rotate {180,-180} 

#
# mouse
#

# click to focus
~button1
 	bspc pointer -g focus

#
# apps
#

super + x; e
	emacs
# Music player
super + x; m
	st mocp
